{"version":3,"file":"6526.d4552813e2652f02f59e.js","mappings":"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","sources":["webpack://grafana/./public/app/features/search/hooks/useSearchKeyboardSelection.ts","webpack://grafana/./public/app/features/search/page/components/ExplainScorePopup.tsx","webpack://grafana/./public/app/features/search/page/components/columns.tsx","webpack://grafana/./public/app/features/search/page/components/SearchResultsTable.tsx","webpack://grafana/./.yarn/__virtual__/react-window-infinite-loader-virtual-aa6d40d17b/3/opt/drone/yarncache/react-window-infinite-loader-npm-1.0.8-ae3ac08822-8fb690df2b.zip/node_modules/react-window-infinite-loader/dist/index.esm.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { Observable, Subject } from 'rxjs';\n\nimport { Field, locationUtil } from '@grafana/data';\nimport { locationService } from '@grafana/runtime';\n\nimport { QueryResponse } from '../service';\n\nexport function useKeyNavigationListener() {\n  const eventsRef = useRef(new Subject<React.KeyboardEvent>());\n  return {\n    keyboardEvents: eventsRef.current,\n    onKeyDown: (e: React.KeyboardEvent<HTMLInputElement>) => {\n      switch (e.code) {\n        case 'ArrowDown':\n        case 'ArrowUp':\n        case 'ArrowLeft':\n        case 'ArrowRight':\n        case 'Enter':\n          eventsRef.current.next(e);\n        default:\n        // ignore\n      }\n    },\n  };\n}\n\ninterface ItemSelection {\n  x: number;\n  y: number;\n}\n\nexport function useSearchKeyboardNavigation(\n  keyboardEvents: Observable<React.KeyboardEvent>,\n  numColumns: number,\n  response: QueryResponse\n): ItemSelection {\n  const highlightIndexRef = useRef<ItemSelection>({ x: 0, y: -1 });\n  const [highlightIndex, setHighlightIndex] = useState<ItemSelection>({ x: 0, y: -1 });\n  const urlsRef = useRef<Field>();\n\n  // Clear selection when the search results change\n  useEffect(() => {\n    urlsRef.current = response.view.fields.url;\n    highlightIndexRef.current.x = 0;\n    highlightIndexRef.current.y = -1;\n    setHighlightIndex({ ...highlightIndexRef.current });\n  }, [response]);\n\n  useEffect(() => {\n    const sub = keyboardEvents.subscribe({\n      next: (keyEvent) => {\n        switch (keyEvent?.code) {\n          case 'ArrowDown': {\n            highlightIndexRef.current.y++;\n            setHighlightIndex({ ...highlightIndexRef.current });\n            break;\n          }\n          case 'ArrowUp':\n            highlightIndexRef.current.y = Math.max(0, highlightIndexRef.current.y - 1);\n            setHighlightIndex({ ...highlightIndexRef.current });\n            break;\n          case 'ArrowRight': {\n            if (numColumns > 0) {\n              highlightIndexRef.current.x = Math.min(numColumns, highlightIndexRef.current.x + 1);\n              setHighlightIndex({ ...highlightIndexRef.current });\n            }\n            break;\n          }\n          case 'ArrowLeft': {\n            if (numColumns > 0) {\n              highlightIndexRef.current.x = Math.max(0, highlightIndexRef.current.x - 1);\n              setHighlightIndex({ ...highlightIndexRef.current });\n            }\n            break;\n          }\n          case 'Enter':\n            if (!urlsRef.current) {\n              break;\n            }\n            const idx = highlightIndexRef.current.x * numColumns + highlightIndexRef.current.y;\n            if (idx < 0) {\n              highlightIndexRef.current.x = 0;\n              highlightIndexRef.current.y = 0;\n              setHighlightIndex({ ...highlightIndexRef.current });\n              break;\n            }\n            const url = urlsRef.current.values?.[idx] as string;\n            if (url) {\n              locationService.push(locationUtil.stripBaseFromUrl(url));\n            }\n        }\n      },\n    });\n\n    return () => sub.unsubscribe();\n  }, [keyboardEvents, numColumns]);\n\n  return highlightIndex;\n}\n","import React, { useState } from 'react';\n\nimport { DataFrame } from '@grafana/data';\nimport { CodeEditor, Modal, ModalTabsHeader, TabContent } from '@grafana/ui';\nimport { DataHoverView } from 'app/plugins/panel/geomap/components/DataHoverView';\n\nexport interface Props {\n  name: string;\n  explain: {};\n  frame: DataFrame;\n  row: number;\n}\n\nconst tabs = [\n  { label: 'Score', value: 'score' },\n  { label: 'Fields', value: 'fields' },\n  { label: 'Allowed actions', value: 'allowed_actions' },\n];\n\nexport function ExplainScorePopup({ name, explain, frame, row }: Props) {\n  const [isOpen, setOpen] = useState<boolean>(true);\n  const [activeTab, setActiveTab] = useState('score');\n\n  const modalHeader = (\n    <ModalTabsHeader\n      title={name}\n      icon={'info'}\n      tabs={tabs}\n      activeTab={activeTab}\n      onChangeTab={(t) => {\n        setActiveTab(t.value);\n      }}\n    />\n  );\n\n  return (\n    <Modal title={modalHeader} isOpen={isOpen} onDismiss={() => setOpen(false)} closeOnBackdropClick closeOnEscape>\n      <TabContent>\n        {activeTab === tabs[0].value && (\n          <CodeEditor\n            width=\"100%\"\n            height=\"70vh\"\n            language=\"json\"\n            showLineNumbers={false}\n            showMiniMap={true}\n            value={JSON.stringify(explain, null, 2)}\n            readOnly={false}\n          />\n        )}\n        {activeTab === tabs[1].value && (\n          <div>\n            <DataHoverView data={frame} rowIndex={row} />\n          </div>\n        )}\n        {activeTab === tabs[2].value && (\n          <CodeEditor\n            width=\"100%\"\n            height=\"70vh\"\n            language=\"json\"\n            showLineNumbers={false}\n            showMiniMap={false}\n            value={(() => {\n              const allowedActions = frame.fields.find((f) => f.name === 'allowed_actions')?.values?.[row];\n              const dsUids = frame.fields.find((f) => f.name === 'ds_uid')?.values?.[row];\n              return JSON.stringify({ dsUids: dsUids ?? [], allowedActions: allowedActions ?? [] }, null, 2);\n            })()}\n            readOnly={false}\n          />\n        )}\n      </TabContent>\n    </Modal>\n  );\n}\n","import { cx } from '@emotion/css';\nimport React from 'react';\n\nimport {\n  DisplayProcessor,\n  Field,\n  FieldType,\n  formattedValueToString,\n  getDisplayProcessor,\n  getFieldDisplayName,\n} from '@grafana/data';\nimport { config, getDataSourceSrv } from '@grafana/runtime';\nimport { Checkbox, Icon, IconButton, IconName, TagList } from '@grafana/ui';\nimport appEvents from 'app/core/app_events';\nimport { t } from 'app/core/internationalization';\nimport { PluginIconName } from 'app/features/plugins/admin/types';\nimport { ShowModalReactEvent } from 'app/types/events';\n\nimport { QueryResponse, SearchResultMeta } from '../../service';\nimport { getIconForKind } from '../../service/utils';\nimport { SelectionChecker, SelectionToggle } from '../selection';\n\nimport { ExplainScorePopup } from './ExplainScorePopup';\nimport { TableColumn } from './SearchResultsTable';\n\nconst TYPE_COLUMN_WIDTH = 175;\nconst DATASOURCE_COLUMN_WIDTH = 200;\n\nexport const generateColumns = (\n  response: QueryResponse,\n  availableWidth: number,\n  selection: SelectionChecker | undefined,\n  selectionToggle: SelectionToggle | undefined,\n  clearSelection: () => void,\n  styles: { [key: string]: string },\n  onTagSelected: (tag: string) => void,\n  onDatasourceChange?: (datasource?: string) => void,\n  showingEverything?: boolean\n): TableColumn[] => {\n  const columns: TableColumn[] = [];\n  const access = response.view.fields;\n  const uidField = access.uid;\n  const kindField = access.kind;\n  let sortFieldWith = 0;\n  const sortField = (access as any)[response.view.dataFrame.meta?.custom?.sortBy] as Field;\n  if (sortField) {\n    sortFieldWith = 175;\n    if (sortField.type === FieldType.time) {\n      sortFieldWith += 25;\n    }\n    availableWidth -= sortFieldWith; // pre-allocate the space for the last column\n  }\n\n  if (access.explain && access.score) {\n    availableWidth -= 100; // pre-allocate the space for the last column\n  }\n\n  let width = 50;\n  if (selection && selectionToggle) {\n    width = 30;\n    columns.push({\n      id: `column-checkbox`,\n      width,\n      Header: () => {\n        if (selection('*', '*')) {\n          return (\n            <div className={styles.checkboxHeader}>\n              <IconButton name=\"check-square\" onClick={clearSelection} />\n            </div>\n          );\n        }\n        return (\n          <div className={styles.checkboxHeader}>\n            <Checkbox\n              checked={false}\n              onChange={(e) => {\n                e.stopPropagation();\n                e.preventDefault();\n                const { view } = response;\n                const count = Math.min(view.length, 50);\n                for (let i = 0; i < count; i++) {\n                  const item = view.get(i);\n                  if (item.uid && item.kind) {\n                    if (!selection(item.kind, item.uid)) {\n                      selectionToggle(item.kind, item.uid);\n                    }\n                  }\n                }\n              }}\n            />\n          </div>\n        );\n      },\n      Cell: (p) => {\n        const uid = uidField.values[p.row.index];\n        const kind = kindField ? kindField.values[p.row.index] : 'dashboard'; // HACK for now\n        const selected = selection(kind, uid);\n        const hasUID = uid != null; // Panels don't have UID! Likely should not be shown on pages with manage options\n        return (\n          <div {...p.cellProps}>\n            <div className={styles.checkbox}>\n              <Checkbox\n                disabled={!hasUID}\n                value={selected && hasUID}\n                onChange={(e) => {\n                  selectionToggle(kind, uid);\n                }}\n              />\n            </div>\n          </div>\n        );\n      },\n      field: uidField,\n    });\n    availableWidth -= width;\n  }\n\n  // Name column\n  width = Math.max(availableWidth * 0.2, 300);\n  columns.push({\n    Cell: (p) => {\n      let classNames = cx(styles.nameCellStyle);\n      let name = access.name.values[p.row.index];\n      if (!name?.length) {\n        const loading = p.row.index >= response.view.dataFrame.length;\n        name = loading ? 'Loading...' : 'Missing title'; // normal for panels\n        classNames += ' ' + styles.missingTitleText;\n      }\n      return (\n        <a {...p.cellProps} href={p.userProps.href} onClick={p.userProps.onClick} className={classNames} title={name}>\n          {name}\n        </a>\n      );\n    },\n    id: `column-name`,\n    field: access.name!,\n    Header: () => <div className={styles.headerNameStyle}>{t('search.results-table.name-header', 'Name')}</div>,\n    width,\n  });\n  availableWidth -= width;\n\n  width = TYPE_COLUMN_WIDTH;\n  columns.push(makeTypeColumn(access.kind, access.panel_type, width, styles));\n  availableWidth -= width;\n\n  // Show datasources if we have any\n  if (access.ds_uid && onDatasourceChange) {\n    width = Math.min(availableWidth / 2.5, DATASOURCE_COLUMN_WIDTH);\n    columns.push(\n      makeDataSourceColumn(\n        access.ds_uid,\n        width,\n        styles.typeIcon,\n        styles.datasourceItem,\n        styles.invalidDatasourceItem,\n        onDatasourceChange\n      )\n    );\n    availableWidth -= width;\n  }\n\n  const showTags = !showingEverything || hasValue(response.view.fields.tags);\n  const meta = response.view.dataFrame.meta?.custom as SearchResultMeta;\n  if (meta?.locationInfo && availableWidth > 0) {\n    width = showTags ? Math.max(availableWidth / 1.75, 300) : availableWidth;\n    availableWidth -= width;\n    columns.push({\n      Cell: (p) => {\n        const parts = (access.location?.values[p.row.index] ?? '').split('/');\n        return (\n          <div {...p.cellProps} className={cx(styles.locationCellStyle)}>\n            {parts.map((p) => {\n              let info = meta.locationInfo[p];\n              if (!info && p === 'general') {\n                info = { kind: 'folder', url: '/dashboards', name: 'General' };\n              }\n              return info ? (\n                <a key={p} href={info.url} className={styles.locationItem}>\n                  <Icon name={getIconForKind(info.kind)} /> {info.name}\n                </a>\n              ) : (\n                <span key={p}>{p}</span>\n              );\n            })}\n          </div>\n        );\n      },\n      id: `column-location`,\n      field: access.location ?? access.url,\n      Header: t('search.results-table.location-header', 'Location'),\n      width,\n    });\n  }\n\n  if (availableWidth > 0 && showTags) {\n    columns.push(makeTagsColumn(access.tags, availableWidth, styles.tagList, onTagSelected));\n  }\n\n  if (sortField && sortFieldWith) {\n    const disp = sortField.display ?? getDisplayProcessor({ field: sortField, theme: config.theme2 });\n\n    columns.push({\n      Header: () => <div className={styles.sortedHeader}>{getFieldDisplayName(sortField)}</div>,\n      Cell: (p) => {\n        return (\n          <div {...p.cellProps} className={styles.sortedItems}>\n            {getDisplayValue({\n              sortField,\n              getDisplay: disp,\n              index: p.row.index,\n              kind: access.kind,\n            })}\n          </div>\n        );\n      },\n      id: `column-sort-field`,\n      field: sortField,\n      width: sortFieldWith,\n    });\n  }\n\n  if (access.explain && access.score) {\n    const vals = access.score.values;\n    const showExplainPopup = (row: number) => {\n      appEvents.publish(\n        new ShowModalReactEvent({\n          component: ExplainScorePopup,\n          props: {\n            name: access.name.values[row],\n            explain: access.explain.values[row],\n            frame: response.view.dataFrame,\n            row: row,\n          },\n        })\n      );\n    };\n\n    columns.push({\n      Header: () => <div className={styles.sortedHeader}>Score</div>,\n      Cell: (p) => {\n        return (\n          <div {...p.cellProps} className={styles.explainItem} onClick={() => showExplainPopup(p.row.index)}>\n            {vals[p.row.index]}\n          </div>\n        );\n      },\n      id: `column-score-field`,\n      field: access.score,\n      width: 100,\n    });\n  }\n\n  return columns;\n};\n\nfunction hasValue(f: Field): boolean {\n  for (let i = 0; i < f.values.length; i++) {\n    if (f.values[i] != null) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction makeDataSourceColumn(\n  field: Field<string[]>,\n  width: number,\n  iconClass: string,\n  datasourceItemClass: string,\n  invalidDatasourceItemClass: string,\n  onDatasourceChange: (datasource?: string) => void\n): TableColumn {\n  const srv = getDataSourceSrv();\n  return {\n    id: `column-datasource`,\n    field,\n    Header: t('search.results-table.datasource-header', 'Data source'),\n    Cell: (p) => {\n      const dslist = field.values[p.row.index];\n      if (!dslist?.length) {\n        return null;\n      }\n      return (\n        <div {...p.cellProps} className={cx(datasourceItemClass)}>\n          {dslist.map((v, i) => {\n            const settings = srv.getInstanceSettings(v);\n            const icon = settings?.meta?.info?.logos?.small;\n            if (icon) {\n              return (\n                <span\n                  key={i}\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    e.preventDefault();\n                    onDatasourceChange(settings.uid);\n                  }}\n                >\n                  <img src={icon} alt=\"\" width={14} height={14} title={settings.type} className={iconClass} />\n                  {settings.name}\n                </span>\n              );\n            }\n            return (\n              <span className={invalidDatasourceItemClass} key={i}>\n                {v}\n              </span>\n            );\n          })}\n        </div>\n      );\n    },\n    width,\n  };\n}\n\nfunction makeTypeColumn(\n  kindField: Field<string>,\n  typeField: Field<string>,\n  width: number,\n  styles: Record<string, string>\n): TableColumn {\n  return {\n    id: `column-type`,\n    field: kindField ?? typeField,\n    Header: t('search.results-table.type-header', 'Type'),\n    Cell: (p) => {\n      const i = p.row.index;\n      const kind = kindField?.values[i] ?? 'dashboard';\n      let icon: IconName = 'apps';\n      let txt = 'Dashboard';\n      if (kind) {\n        txt = kind;\n        switch (txt) {\n          case 'dashboard':\n            txt = t('search.results-table.type-dashboard', 'Dashboard');\n            break;\n\n          case 'folder':\n            icon = 'folder';\n            txt = t('search.results-table.type-folder', 'Folder');\n            break;\n\n          case 'panel':\n            icon = `${PluginIconName.panel}`;\n            const type = typeField.values[i];\n            if (type) {\n              txt = type;\n              const info = config.panels[txt];\n              if (info?.name) {\n                txt = info.name;\n              } else {\n                switch (type) {\n                  case 'row':\n                    txt = 'Row';\n                    icon = `bars`;\n                    break;\n                  case 'singlestat': // auto-migration\n                    txt = 'Singlestat';\n                    break;\n                  default:\n                    icon = `question-circle`; // plugin not found\n                }\n              }\n            }\n            break;\n        }\n      }\n      return (\n        <div {...p.cellProps} className={styles.typeText}>\n          <Icon name={icon} size=\"sm\" title={txt} className={styles.typeIcon} />\n          {txt}\n        </div>\n      );\n    },\n    width,\n  };\n}\n\nfunction makeTagsColumn(\n  field: Field<string[]>,\n  width: number,\n  tagListClass: string,\n  onTagSelected: (tag: string) => void\n): TableColumn {\n  return {\n    Cell: (p) => {\n      const tags = field.values[p.row.index];\n      return tags ? (\n        <div {...p.cellProps}>\n          <TagList className={tagListClass} tags={tags} onClick={onTagSelected} />\n        </div>\n      ) : null;\n    },\n    id: `column-tags`,\n    field: field,\n    Header: t('search.results-table.tags-header', 'Tags'),\n    width,\n  };\n}\n\nfunction getDisplayValue({\n  kind,\n  sortField,\n  index,\n  getDisplay,\n}: {\n  kind: Field;\n  sortField: Field;\n  index: number;\n  getDisplay: DisplayProcessor;\n}) {\n  const value = sortField.values[index];\n  if (['folder', 'panel'].includes(kind.values[index]) && value === 0) {\n    return '-';\n  }\n  return formattedValueToString(getDisplay(value));\n}\n","/* eslint-disable react/jsx-no-undef */\nimport { css } from '@emotion/css';\nimport React, { useEffect, useMemo, useRef, useCallback, useState, CSSProperties } from 'react';\nimport { useTable, Column, TableOptions, Cell, useAbsoluteLayout } from 'react-table';\nimport { FixedSizeList } from 'react-window';\nimport InfiniteLoader from 'react-window-infinite-loader';\nimport { Observable } from 'rxjs';\n\nimport { Field, GrafanaTheme2 } from '@grafana/data';\nimport { TableCellHeight } from '@grafana/schema';\nimport { useStyles2, useTheme2 } from '@grafana/ui';\nimport { TableCell } from '@grafana/ui/src/components/Table/TableCell';\nimport { useTableStyles } from '@grafana/ui/src/components/Table/styles';\n\nimport { useSearchKeyboardNavigation } from '../../hooks/useSearchKeyboardSelection';\nimport { QueryResponse } from '../../service';\nimport { SelectionChecker, SelectionToggle } from '../selection';\n\nimport { generateColumns } from './columns';\n\nexport type SearchResultsProps = {\n  response: QueryResponse;\n  width: number;\n  height: number;\n  selection?: SelectionChecker;\n  selectionToggle?: SelectionToggle;\n  clearSelection: () => void;\n  onTagSelected: (tag: string) => void;\n  onDatasourceChange?: (datasource?: string) => void;\n  onClickItem?: (event: React.MouseEvent<HTMLElement>) => void;\n  keyboardEvents: Observable<React.KeyboardEvent>;\n};\n\nexport type TableColumn = Column & {\n  field?: Field;\n};\n\nconst HEADER_HEIGHT = 36; // pixels\n\nexport const SearchResultsTable = React.memo(\n  ({\n    response,\n    width,\n    height,\n    selection,\n    selectionToggle,\n    clearSelection,\n    onTagSelected,\n    onDatasourceChange,\n    onClickItem,\n    keyboardEvents,\n  }: SearchResultsProps) => {\n    const styles = useStyles2(getStyles);\n    const columnStyles = useStyles2(getColumnStyles);\n    const tableStyles = useTableStyles(useTheme2(), TableCellHeight.Sm);\n    const infiniteLoaderRef = useRef<InfiniteLoader>(null);\n    const [listEl, setListEl] = useState<FixedSizeList | null>(null);\n    const highlightIndex = useSearchKeyboardNavigation(keyboardEvents, 0, response);\n\n    const memoizedData = useMemo(() => {\n      if (!response?.view?.dataFrame.fields.length) {\n        return [];\n      }\n\n      // as we only use this to fake the length of our data set for react-table we need to make sure we always return an array\n      // filled with values at each index otherwise we'll end up trying to call accessRow for null|undefined value in\n      // https://github.com/tannerlinsley/react-table/blob/7be2fc9d8b5e223fc998af88865ae86a88792fdb/src/hooks/useTable.js#L585\n      return Array(response.totalRows).fill(0);\n    }, [response]);\n\n    // Scroll to the top and clear loader cache when the query results change\n    useEffect(() => {\n      if (infiniteLoaderRef.current) {\n        infiniteLoaderRef.current.resetloadMoreItemsCache();\n      }\n      if (listEl) {\n        listEl.scrollTo(0);\n      }\n    }, [memoizedData, listEl]);\n\n    // React-table column definitions\n    const memoizedColumns = useMemo(() => {\n      return generateColumns(\n        response,\n        width,\n        selection,\n        selectionToggle,\n        clearSelection,\n        columnStyles,\n        onTagSelected,\n        onDatasourceChange,\n        response.view?.length >= response.totalRows\n      );\n    }, [response, width, columnStyles, selection, selectionToggle, clearSelection, onTagSelected, onDatasourceChange]);\n\n    const options: TableOptions<{}> = useMemo(\n      () => ({\n        columns: memoizedColumns,\n        data: memoizedData,\n      }),\n      [memoizedColumns, memoizedData]\n    );\n\n    const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = useTable(options, useAbsoluteLayout);\n\n    const handleLoadMore = useCallback(\n      async (startIndex: number, endIndex: number) => {\n        await response.loadMoreItems(startIndex, endIndex);\n\n        // After we load more items, select them if the \"select all\" checkbox\n        // is selected\n        const isAllSelected = selection?.('*', '*');\n        if (!selectionToggle || !selection || !isAllSelected) {\n          return;\n        }\n\n        for (let index = startIndex; index < response.view.length; index++) {\n          const item = response.view.get(index);\n          const itemIsSelected = selection(item.kind, item.uid);\n          if (!itemIsSelected) {\n            selectionToggle(item.kind, item.uid);\n          }\n        }\n      },\n      [response, selection, selectionToggle]\n    );\n\n    const RenderRow = useCallback(\n      ({ index: rowIndex, style }: { index: number; style: CSSProperties }) => {\n        const row = rows[rowIndex];\n        prepareRow(row);\n\n        const url = response.view.fields.url?.values[rowIndex];\n        let className = styles.rowContainer;\n        if (rowIndex === highlightIndex.y) {\n          className += ' ' + styles.selectedRow;\n        }\n\n        return (\n          <div {...row.getRowProps({ style })} className={className}>\n            {row.cells.map((cell: Cell, index: number) => {\n              return (\n                <TableCell\n                  key={index}\n                  tableStyles={tableStyles}\n                  cell={cell}\n                  columnIndex={index}\n                  columnCount={row.cells.length}\n                  userProps={{ href: url, onClick: onClickItem }}\n                />\n              );\n            })}\n          </div>\n        );\n      },\n      [rows, prepareRow, response.view.fields.url?.values, highlightIndex, styles, tableStyles, onClickItem]\n    );\n\n    if (!rows.length) {\n      return <div className={styles.noData}>No data</div>;\n    }\n\n    return (\n      <div {...getTableProps()} aria-label=\"Search results table\" role=\"table\">\n        <div>\n          {headerGroups.map((headerGroup) => {\n            const { key, ...headerGroupProps } = headerGroup.getHeaderGroupProps();\n\n            return (\n              <div key={key} {...headerGroupProps} className={styles.headerRow}>\n                {headerGroup.headers.map((column) => {\n                  const { key, ...headerProps } = column.getHeaderProps();\n                  return (\n                    <div key={key} {...headerProps} role=\"columnheader\" className={styles.headerCell}>\n                      {column.render('Header')}\n                    </div>\n                  );\n                })}\n              </div>\n            );\n          })}\n        </div>\n\n        <div {...getTableBodyProps()}>\n          <InfiniteLoader\n            ref={infiniteLoaderRef}\n            isItemLoaded={response.isItemLoaded}\n            itemCount={rows.length}\n            loadMoreItems={handleLoadMore}\n          >\n            {({ onItemsRendered, ref }) => (\n              <FixedSizeList\n                ref={(innerRef) => {\n                  ref(innerRef);\n                  setListEl(innerRef);\n                }}\n                onItemsRendered={onItemsRendered}\n                height={height - HEADER_HEIGHT}\n                itemCount={rows.length}\n                itemSize={tableStyles.rowHeight}\n                width=\"100%\"\n                style={{ overflow: 'hidden auto' }}\n              >\n                {RenderRow}\n              </FixedSizeList>\n            )}\n          </InfiniteLoader>\n        </div>\n      </div>\n    );\n  }\n);\nSearchResultsTable.displayName = 'SearchResultsTable';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  const rowHoverBg = theme.colors.emphasize(theme.colors.background.primary, 0.03);\n\n  return {\n    noData: css`\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      height: 100%;\n    `,\n    headerCell: css`\n      padding: ${theme.spacing(1)};\n    `,\n    headerRow: css`\n      background-color: ${theme.colors.background.secondary};\n      height: ${HEADER_HEIGHT}px;\n      align-items: center;\n    `,\n    selectedRow: css`\n      background-color: ${rowHoverBg};\n      box-shadow: inset 3px 0px ${theme.colors.primary.border};\n    `,\n    rowContainer: css`\n      label: row;\n      &:hover {\n        background-color: ${rowHoverBg};\n      }\n\n      &:not(:hover) div[role='cell'] {\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n    `,\n  };\n};\n\n// CSS for columns from react table\nconst getColumnStyles = (theme: GrafanaTheme2) => {\n  return {\n    nameCellStyle: css`\n      border-right: none;\n      padding: ${theme.spacing(1)} ${theme.spacing(1)} ${theme.spacing(1)} ${theme.spacing(2)};\n      overflow: hidden;\n      text-overflow: ellipsis;\n      user-select: text;\n      white-space: nowrap;\n      &:hover {\n        box-shadow: none;\n      }\n    `,\n    headerNameStyle: css`\n      padding-left: ${theme.spacing(1)};\n    `,\n\n    typeIcon: css`\n      margin-left: 5px;\n      margin-right: 9.5px;\n      vertical-align: middle;\n      display: inline-block;\n      margin-bottom: ${theme.v1.spacing.xxs};\n      fill: ${theme.colors.text.secondary};\n    `,\n    datasourceItem: css`\n      span {\n        &:hover {\n          color: ${theme.colors.text.link};\n        }\n      }\n    `,\n    missingTitleText: css`\n      color: ${theme.colors.text.disabled};\n      font-style: italic;\n    `,\n    invalidDatasourceItem: css`\n      color: ${theme.colors.error.main};\n      text-decoration: line-through;\n    `,\n    typeText: css`\n      color: ${theme.colors.text.secondary};\n      padding-top: ${theme.spacing(1)};\n    `,\n    locationItem: css`\n      color: ${theme.colors.text.secondary};\n      margin-right: 12px;\n    `,\n    sortedHeader: css`\n      text-align: right;\n      padding-right: ${theme.spacing(2)};\n    `,\n    sortedItems: css`\n      text-align: right;\n      padding: ${theme.spacing(1)} ${theme.spacing(3)} ${theme.spacing(1)} ${theme.spacing(1)};\n    `,\n    explainItem: css`\n      text-align: right;\n      padding: ${theme.spacing(1)} ${theme.spacing(3)} ${theme.spacing(1)} ${theme.spacing(1)};\n      cursor: pointer;\n    `,\n    locationCellStyle: css`\n      padding-top: ${theme.spacing(1)};\n      padding-right: ${theme.spacing(1)};\n    `,\n    checkboxHeader: css`\n      margin-left: 2px;\n    `,\n    checkbox: css`\n      margin-left: 10px;\n      margin-right: 10px;\n      margin-top: 5px;\n    `,\n    tagList: css`\n      padding-top: ${theme.spacing(0.5)};\n      justify-content: flex-start;\n      flex-wrap: nowrap;\n    `,\n  };\n};\n","import { PureComponent } from 'react';\n\nfunction isInteger(value) {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\n\nfunction isRangeVisible(_ref) {\n  var lastRenderedStartIndex = _ref.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref.lastRenderedStopIndex,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n\nfunction scanForUnloadedRanges(_ref) {\n  var isItemLoaded = _ref.isItemLoaded,\n      itemCount = _ref.itemCount,\n      minimumBatchSize = _ref.minimumBatchSize,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  var unloadedRanges = [];\n\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var _index = startIndex; _index <= stopIndex; _index++) {\n    var loaded = isItemLoaded(_index);\n\n    if (!loaded) {\n      rangeStopIndex = _index;\n      if (rangeStartIndex === null) {\n        rangeStartIndex = _index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push(rangeStartIndex, rangeStopIndex);\n\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  }\n\n  // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), itemCount - 1);\n\n    for (var _index2 = rangeStopIndex + 1; _index2 <= potentialStopIndex; _index2++) {\n      if (!isItemLoaded(_index2)) {\n        rangeStopIndex = _index2;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push(rangeStartIndex, rangeStopIndex);\n  }\n\n  // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n  if (unloadedRanges.length) {\n    while (unloadedRanges[1] - unloadedRanges[0] + 1 < minimumBatchSize && unloadedRanges[0] > 0) {\n      var _index3 = unloadedRanges[0] - 1;\n\n      if (!isItemLoaded(_index3)) {\n        unloadedRanges[0] = _index3;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar InfiniteLoader = function (_PureComponent) {\n  inherits(InfiniteLoader, _PureComponent);\n\n  function InfiniteLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, InfiniteLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = InfiniteLoader.__proto__ || Object.getPrototypeOf(InfiniteLoader)).call.apply(_ref, [this].concat(args))), _this), _this._lastRenderedStartIndex = -1, _this._lastRenderedStopIndex = -1, _this._memoizedUnloadedRanges = [], _this._onItemsRendered = function (_ref2) {\n      var visibleStartIndex = _ref2.visibleStartIndex,\n          visibleStopIndex = _ref2.visibleStopIndex;\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (!isInteger(visibleStartIndex) || !isInteger(visibleStopIndex)) {\n          console.warn('Invalid onItemsRendered signature; please refer to InfiniteLoader documentation.');\n        }\n\n        if (typeof _this.props.loadMoreRows === 'function') {\n          console.warn('InfiniteLoader \"loadMoreRows\" prop has been renamed to \"loadMoreItems\".');\n        }\n      }\n\n      _this._lastRenderedStartIndex = visibleStartIndex;\n      _this._lastRenderedStopIndex = visibleStopIndex;\n\n      _this._ensureRowsLoaded(visibleStartIndex, visibleStopIndex);\n    }, _this._setRef = function (listRef) {\n      _this._listRef = listRef;\n    }, _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(InfiniteLoader, [{\n    key: 'resetloadMoreItemsCache',\n    value: function resetloadMoreItemsCache() {\n      var autoReload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      this._memoizedUnloadedRanges = [];\n\n      if (autoReload) {\n        this._ensureRowsLoaded(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this._listRef == null) {\n          console.warn('Invalid list ref; please refer to InfiniteLoader documentation.');\n        }\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var children = this.props.children;\n\n\n      return children({\n        onItemsRendered: this._onItemsRendered,\n        ref: this._setRef\n      });\n    }\n  }, {\n    key: '_ensureRowsLoaded',\n    value: function _ensureRowsLoaded(startIndex, stopIndex) {\n      var _props = this.props,\n          isItemLoaded = _props.isItemLoaded,\n          itemCount = _props.itemCount,\n          _props$minimumBatchSi = _props.minimumBatchSize,\n          minimumBatchSize = _props$minimumBatchSi === undefined ? 10 : _props$minimumBatchSi,\n          _props$threshold = _props.threshold,\n          threshold = _props$threshold === undefined ? 15 : _props$threshold;\n\n\n      var unloadedRanges = scanForUnloadedRanges({\n        isItemLoaded: isItemLoaded,\n        itemCount: itemCount,\n        minimumBatchSize: minimumBatchSize,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(itemCount - 1, stopIndex + threshold)\n      });\n\n      // Avoid calling load-rows unless range has changed.\n      // This shouldn't be strictly necessary, but is maybe nice to do.\n      if (this._memoizedUnloadedRanges.length !== unloadedRanges.length || this._memoizedUnloadedRanges.some(function (startOrStop, index) {\n        return unloadedRanges[index] !== startOrStop;\n      })) {\n        this._memoizedUnloadedRanges = unloadedRanges;\n        this._loadUnloadedRanges(unloadedRanges);\n      }\n    }\n  }, {\n    key: '_loadUnloadedRanges',\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      // loadMoreRows was renamed to loadMoreItems in v1.0.3; will be removed in v2.0\n      var loadMoreItems = this.props.loadMoreItems || this.props.loadMoreRows;\n\n      var _loop = function _loop(i) {\n        var startIndex = unloadedRanges[i];\n        var stopIndex = unloadedRanges[i + 1];\n        var promise = loadMoreItems(startIndex, stopIndex);\n        if (promise != null) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: startIndex,\n              stopIndex: stopIndex\n            })) {\n              // Handle an unmount while promises are still in flight.\n              if (_this2._listRef == null) {\n                return;\n              }\n\n              // Resize cached row sizes for VariableSizeList,\n              // otherwise just re-render the list.\n              if (typeof _this2._listRef.resetAfterIndex === 'function') {\n                _this2._listRef.resetAfterIndex(startIndex, true);\n              } else {\n                // HACK reset temporarily cached item styles to force PureComponent to re-render.\n                // This is pretty gross, but I'm okay with it for now.\n                // Don't judge me.\n                if (typeof _this2._listRef._getItemStyleCache === 'function') {\n                  _this2._listRef._getItemStyleCache(-1);\n                }\n                _this2._listRef.forceUpdate();\n              }\n            }\n          });\n        }\n      };\n\n      for (var i = 0; i < unloadedRanges.length; i += 2) {\n        _loop(i);\n      }\n    }\n  }]);\n  return InfiniteLoader;\n}(PureComponent);\n\nexport default InfiniteLoader;\n"],"names":["useKeyNavigationListener","eventsRef","e","useSearchKeyboardNavigation","keyboardEvents","numColumns","response","highlightIndexRef","highlightIndex","setHighlightIndex","urlsRef","sub","keyEvent","idx","url","tabs","ExplainScorePopup","name","explain","frame","row","isOpen","setOpen","activeTab","setActiveTab","modalHeader","ModalTabsHeader","t","Modal","TabContent","CodeEditor","DataHoverView","allowedActions","f","dsUids","TYPE_COLUMN_WIDTH","DATASOURCE_COLUMN_WIDTH","generateColumns","availableWidth","selection","selectionToggle","clearSelection","styles","onTagSelected","onDatasourceChange","showingEverything","columns","access","uidField","kindField","sortFieldWith","sortField","width","IconButton","Checkbox","view","count","i","item","p","uid","kind","selected","hasUID","classNames","makeTypeColumn","makeDataSourceColumn","showTags","hasValue","meta","parts","info","Icon","makeTagsColumn","disp","config","getDisplayValue","vals","showExplainPopup","field","iconClass","datasourceItemClass","invalidDatasourceItemClass","srv","dslist","settings","icon","typeField","txt","type","tagListClass","tags","TagList","index","getDisplay","value","HEADER_HEIGHT","SearchResultsTable","height","onClickItem","getStyles","columnStyles","getColumnStyles","tableStyles","infiniteLoaderRef","listEl","setListEl","memoizedData","memoizedColumns","options","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","handleLoadMore","startIndex","endIndex","isAllSelected","RenderRow","rowIndex","style","className","cell","TableCell","headerGroup","key","headerGroupProps","column","headerProps","onItemsRendered","ref","innerRef","theme","rowHoverBg","isInteger","isRangeVisible","_ref","lastRenderedStartIndex","lastRenderedStopIndex","stopIndex","scanForUnloadedRanges","isItemLoaded","itemCount","minimumBatchSize","unloadedRanges","rangeStartIndex","rangeStopIndex","_index","loaded","potentialStopIndex","_index2","_index3","classCallCheck","instance","Constructor","createClass","defineProperties","target","props","descriptor","protoProps","staticProps","inherits","subClass","superClass","possibleConstructorReturn","self","call","InfiniteLoader","_PureComponent","_temp","_this","_ret","_len","args","_key","_ref2","visibleStartIndex","visibleStopIndex","listRef","autoReload","children","_props","_props$minimumBatchSi","_props$threshold","threshold","startOrStop","_this2","loadMoreItems","_loop","promise"],"sourceRoot":""}